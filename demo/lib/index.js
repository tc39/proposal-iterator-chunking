"use strict";
const IteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([].values()));
function liftIterator(iter) {
    return { [Symbol.iterator]() { return iter; } };
}
function* chunksImpl(iter, chunkSize) {
    let buffer = [];
    for (const elem of liftIterator(iter)) {
        buffer.push(elem);
        if (buffer.length === chunkSize) {
            yield buffer;
            buffer = [];
        }
    }
    if (buffer.length > 0) {
        yield buffer;
    }
}
function chunks(chunkSize) {
    if (typeof chunkSize !== 'number'
        || chunkSize <= 0
        || Math.floor(chunkSize) !== chunkSize
        || chunkSize >= Math.pow(2, 53)) {
        throw new RangeError;
    }
    return chunksImpl(this, chunkSize);
}
function* windowsImpl(iter, windowSize) {
    let buffer = [];
    for (const elem of liftIterator(iter)) {
        if (buffer.length === windowSize) {
            buffer.shift();
        }
        buffer.push(elem);
        if (buffer.length === windowSize) {
            yield buffer.slice();
        }
    }
}
function windows(windowSize) {
    if (typeof windowSize !== 'number'
        || windowSize <= 0
        || Math.floor(windowSize) !== windowSize
        || windowSize >= Math.pow(2, 53)) {
        throw new RangeError;
    }
    return windowsImpl(this, windowSize);
}
function* slidingImpl(iter, windowSize) {
    let buffer = [];
    for (const elem of liftIterator(iter)) {
        if (buffer.length === windowSize) {
            buffer.shift();
        }
        buffer.push(elem);
        if (buffer.length === windowSize) {
            yield buffer.slice();
        }
    }
    if (0 < buffer.length && buffer.length < windowSize) {
        yield buffer;
    }
}
function sliding(windowSize) {
    if (typeof windowSize !== 'number'
        || windowSize <= 0
        || Math.floor(windowSize) !== windowSize
        || windowSize >= Math.pow(2, 53)) {
        throw new RangeError;
    }
    return slidingImpl(this, windowSize);
}
Object.defineProperty(IteratorPrototype, 'chunks', {
    configurable: true,
    writable: true,
    enumerable: false,
    value: chunks,
});
Object.defineProperty(IteratorPrototype, 'windows', {
    configurable: true,
    writable: true,
    enumerable: false,
    value: windows,
});
Object.defineProperty(IteratorPrototype, 'sliding', {
    configurable: true,
    writable: true,
    enumerable: false,
    value: sliding,
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0saUJBQWlCLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUE7QUFFbkYsU0FBUyxZQUFZLENBQUksSUFBaUI7SUFDeEMsT0FBTyxFQUFFLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLE9BQU8sSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7QUFDbEQsQ0FBQztBQUVELFFBQVEsQ0FBQyxDQUFDLFVBQVUsQ0FBSSxJQUFpQixFQUFFLFNBQWlCO0lBQzFELElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUNoQixLQUFLLE1BQU0sSUFBSSxJQUFJLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNyQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xCLElBQUksTUFBTSxDQUFDLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDL0IsTUFBTSxNQUFNLENBQUM7WUFDYixNQUFNLEdBQUcsRUFBRSxDQUFDO1NBQ2I7S0FDRjtJQUNELElBQUksTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDckIsTUFBTSxNQUFNLENBQUM7S0FDZDtBQUNILENBQUM7QUFHRCxTQUFTLE1BQU0sQ0FBZ0IsU0FBa0I7SUFDL0MsSUFDRSxPQUFPLFNBQVMsS0FBSyxRQUFRO1dBQzFCLFNBQVMsSUFBSSxDQUFDO1dBQ2QsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxTQUFTO1dBQ25DLFNBQVMsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFDL0I7UUFDQSxNQUFNLElBQUksVUFBVSxDQUFDO0tBQ3RCO0lBQ0QsT0FBTyxVQUFVLENBQUMsSUFB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